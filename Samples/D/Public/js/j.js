/*//======================================////
////																			////
////   j.js - главный js-файл документа 	////
////																			////
////======================================////
//// 			        		 	    	   ////
//// 			    Оглавление  			 ////
//// 			         				       ////
////=============================//*/
/**
 *
 * 1. Принять и обработать данные с сервера
 *
 *   1.1. Пример...
 *
 * 2. Создать экземпляр модели из m.js с функционалом из f.js
 * 3. Добавить в ko все необходимые кастомные связки
 * 4. Активизировать модель для DOM-элемента с id == 'content'
 *
 *
 */

//------------------------------------------//
// 1. Принять и обработать данные с сервера //
//------------------------------------------//

	//----------------//
	// 1.1. Пример... //
	//----------------//

/*
    // 1] Подготовить массив для результата
    server.routes_prepeared = [];

		// 2] Заполнить server.routes_prepeared
    for(var i=0; i<server.routes.length; i++) {

      // 2.1] Сформировать объект для добавления
      var obj = {};
      for(var key in server.routes[i]) {

        // 2.1.1] Если свойство не своё, пропускаем
        if(!server.routes[i].hasOwnProperty(key)) continue;

				// 2.1.2] Если key == 'route_access_priv'
				if(key == 'route_access_priv') {

					// Если server.routes[i][key] == 0
					// - Изменить 0 на '' (чтобы optionsCaption в select работал)
					if(server.routes[i][key] == 0)
						server.routes[i][key] = '';

				}

        // 2.1.3] Добавим в obj свойство key из server.routes[i]
        obj[key] = ko.observable(server.routes[i][key]);

      }

      // 2.2] Добавить этот объект в server.routes_prepeared
      server.routes_prepeared.push(ko.observable(obj))

    }
*/


//------------------------------------------------------------//
// 2. Создать экземпляр модели из m.js с функционалом из f.js //
//------------------------------------------------------------//
var model = Object.create(ModelProto).constructor(ModelFunctions);


//---------------------------------------------------//
// 3. Добавить в ko все необходимые кастомные связки //
//---------------------------------------------------//

	// 1] Связка phoneRF для input'а для приема номера телефона в российском формате
	//ko.bindingHandlers.phoneRF = custom_bindings_for_ko.phoneRF;

	// 2] Связка phoneRF для input'а для приема номера телефона в российском формате
	//ko.bindingHandlers.birthday = custom_bindings_for_ko.birthday;


//-------------------------------------------------------------//
// 4. Активизировать модель для DOM-элемента с id == 'content' //
//-------------------------------------------------------------//
ko.applyBindings(model, document.getElementById('content'));








