/*//==========================================================================////
////																		                                      ////
////   Модель FAQ, предназначенная для подключения в основной m.js	документа	////
////																				                                  ////
////==========================================================================////
//// 			        		 	    	   ////
//// 			    Оглавление  			 ////
//// 			         				       ////
////=============================//*/
/**
 *
 *
 * 	s5. Модель ТОПа игроков
 *
 * 		s5.1. Группы статей
 * 		s5.2. Выбранная группа
 * 		s5.3. Загруженные статьи для разных групп
 * 		s5.4. Виден ли модальный щит стартовой загрузки FAQа
 * 		s5.5. Название текущего FAQа
 *
 *    s5.n. Индексы и вычисляемые значения
 *
 * 	X. Подготовка к завершению
 *
 *    X1. Вернуть ссылку self на объект-модель
 *
 *
 */


//====================//
// 			        		 	//
// 			 Модель  			//
// 			         			//
//====================//
var ModelFaq = { constructor: function(self, m) { m.s5 = this;

	//---------------------------//
	// 			        		 	       //
	// 	s5. Модель ТОПа игроков  //
	// 			         			       //
	//---------------------------//

	//---------------------//
	// s5.1. Группы статей //
	//---------------------//
	self.m.s5.groups = ko.observableArray([]);

	//------------------------//
	// s5.2. Выбранная группа //
	//------------------------//
	self.m.s5.choosen_group = ko.observable("");

	//-------------------------------------------//
	// s5.3. Загруженные статьи для разных групп //
	//-------------------------------------------//
	self.m.s5.articles = ko.observable({});

	//------------------------------------------------------//
	// s5.4. Виден ли модальный щит стартовой загрузки FAQа //
	//------------------------------------------------------//
	self.m.s5.is_initial_shield_visible = ko.observable(false);

	//------------------------------//
	// s5.5. Название текущего FAQа //
	//------------------------------//
	self.m.s5.current_faq = ko.observable("");

	//--------------------------------------//
	// s5.n. Индексы и вычисляемые значения //
	//--------------------------------------//
	self.m.s5.indexes = {};

		// s1.n.1. Проставить max-height для всех articles //
		//-------------------------------------------------//
		ko.computed(function(){ setTimeout(function(){

			//// 1] Получить все articles
			//var articles = $('.faq-content .faq-articles .article');
//
			//console.log(articles);


		}, 1000)}); //.extend({rateLimit: 10, method: "notifyWhenChangesStop"});




	//------------------------------//
	// 			        		 	          //
	// 	X. Подготовка к завершению  //
	// 			         			          //
	//------------------------------//

	//------------------------------------------//
	// X1. Вернуть ссылку self на объект-модель //
	//------------------------------------------//
	return self.m.s5;


}};	// конец модели









