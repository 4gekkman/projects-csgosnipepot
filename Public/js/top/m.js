/*//==================================================================================////
////																		                                              ////
////   Модель ТОПа игроков, предназначенная для подключения в основной m.js	документа	////
////																				                                          ////
////==================================================================================////
//// 			        		 	    	   ////
//// 			    Оглавление  			 ////
//// 			         				       ////
////=============================//*/
/**
 *
 *
 * 	s4. Модель ТОПа игроков
 *
 * 		s4.1. ...
 *    s4.n. Индексы и вычисляемые значения
 *
 * 	X. Подготовка к завершению
 *
 *    X1. Вернуть ссылку self на объект-модель
 *
 *
 */


//====================//
// 			        		 	//
// 			 Модель  			//
// 			         			//
//====================//
var ModelTop = { constructor: function(self, m) { m.s4 = this;

	//---------------------------//
	// 			        		 	       //
	// 	s4. Модель ТОПа игроков  //
	// 			         			       //
	//---------------------------//

	//-------------------------------------------------//
	// s4.1. Наблюдаемый массив с данными ТОПа игроков //
	//-------------------------------------------------//
	self.m.s4.top = ko.observableArray([]);

	//----------------------------------------------------//
	// s4.2. Виден ли модальный щит загрузки ТОПа игроков //
	//----------------------------------------------------//
	self.m.s4.is_shield_visible = ko.observable(false);


	//--------------------------------------//
	// s4.n. Индексы и вычисляемые значения //
	//--------------------------------------//
	self.m.s4.indexes = {};

		// s1.n.1. Общие вычисления //
		//--------------------------//
		ko.computed(function(){

			// 1] Запустить команду запроса данных для ТОПа, если URI == '/top'
			if(layoutmodel.m.s1.selected_subdoc() && layoutmodel.m.s1.selected_subdoc().uri() == '/top')
 				self.f.s4.get_top();

		}); //.extend({rateLimit: 10, method: "notifyWhenChangesStop"});



	//------------------------------//
	// 			        		 	          //
	// 	X. Подготовка к завершению  //
	// 			         			          //
	//------------------------------//

	//------------------------------------------//
	// X1. Вернуть ссылку self на объект-модель //
	//------------------------------------------//
	return self.m.s4;


}};	// конец модели









