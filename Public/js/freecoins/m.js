/*//================================================================================////
////																		                                            ////
////   Модель Free Coins, предназначенная для подключения в основной m.js	документа	////
////																				                                        ////
////================================================================================////
//// 			        		 	    	   ////
//// 			    Оглавление  			 ////
//// 			         				       ////
////=============================//*/
/**
 *
 *
 * 	s8. Модель Free Coins
 *
 * 		s8.1. Модель ежедневной награды
 *    s8.n. Индексы и вычисляемые значения
 *
 *  W. Обработка websocket-сообщений
 *
 * 		w8.1. Обработка сообщений через публичный канал
 * 		w8.2. Обработка сообщений через частный канал
 *
 * 	X. Подготовка к завершению
 *
 *    X1. Вернуть ссылку self на объект-модель
 *
 *
 */


//====================//
// 			        		 	//
// 			 Модель  			//
// 			         			//
//====================//
var ModelFc = { constructor: function(self, m) { m.s8 = this;

	//-------------------------//
	// 			        		 	     //
	// 	s8. Модель Free Coins  //
	// 			         			     //
	//-------------------------//

	//---------------------------------//
	// s8.1. Модель ежедневной награды //
	//---------------------------------//
	self.m.s8.reword = {};

		// 1] Получил ли уже сегодня этот аутентиф.пользователь ежедневную награду? //
		//--------------------------------------------------------------------------//
		self.m.s8.reword.is_got_reword = ko.observable(server.data.reward.is_got_reword);

		// 2] Размер ежедневное награды в монетах //
		//----------------------------------------//
		self.m.s8.reword.coins = ko.observable(server.data.reward.coins);

		// 3] Сколько времени осталось до наступления следующих суток //
		//------------------------------------------------------------//
		self.m.s8.reword.time_until_next_day = ko.observable(server.data.reward.time_until_next_day);

		// 4] Показан ли спиннер на кнопке //
		//---------------------------------//
		self.m.s8.reword.is_spinner_vis = ko.observable(false);

		// 5] Монета/Монеты/Монет
		self.m.s8.reword.declension = ko.computed(function(){

			var declension = declension_by_number(self.m.s8.reword.coins());
			if(declension == 1) return 'монета';
			if(declension == 2) return 'монеты';
			if(declension == 3) return 'монет';
			return 'монет';

		});


	//--------------------------------------//
	// s8.n. Индексы и вычисляемые значения //
	//--------------------------------------//
	self.m.s8.indexes = {};

		// s1.n.1. Общие вычисления //
		//--------------------------//
		ko.computed(function(){



		}); //.extend({rateLimit: 10, method: "notifyWhenChangesStop"});


	//------------------------------------//
	// 			        		 	                //
	// 	W. Обработка websocket-сообщений  //
	// 			         			                //
	//------------------------------------//

	//-------------------------------------------------//
	// w8.1. Обработка сообщений через публичный канал //
	//-------------------------------------------------//
	self.websocket.ws1.on('m15:public', function(data) {

		// 1] Получить имя задачи
		var task = data.data.data.task;

		// 2] В зависимости от task выполнить соотв.метод
		switch(task) {

			case "m15:freecoins:left2unblock": self.f.s8.fc_left2unblock(data.data.data.data); break;
			case "m15:freecoins:unblock": self.f.s8.fc_unblock(); break;

		}

	});

	//-----------------------------------------------//
	// w8.2. Обработка сообщений через частный канал //
	//-----------------------------------------------//
	if(JSON.parse(layout_data.data.auth).is_anon == 0) {
		self.websocket.ws1.on('m15:private:'+JSON.parse(layout_data.data.auth).user.id, function(data) {

			// 1] Получить имя задачи
			var task = data.data.data.task;

			// 2] В зависимости от task выполнить соотв.метод
			switch(task) {

				case "m15:freecoins:block": self.f.s8.fc_block(); break;

			}

		});
	}







	//-------------------------------------------------//
	// w8.2. Обработка сообщений через публичный канал //
	//-------------------------------------------------//






	//------------------------------//
	// 			        		 	          //
	// 	X. Подготовка к завершению  //
	// 			         			          //
	//------------------------------//

	//------------------------------------------//
	// X1. Вернуть ссылку self на объект-модель //
	//------------------------------------------//
	return self.m.s8;


}};	// конец модели









